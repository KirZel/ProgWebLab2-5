function clearTable(idTable){
  let table = document.getElementById(idTable);
  table.innerHTML = ''; 
}

function DateChangeForm(data1){
  let newdate;
  newdate = data1.substring(6,10) + '-' + data1.substring(3,5) + '-' + data1.substring(0,2);
  return newdate;
}

let createTable = (data, idTable) => {
  let table = document.getElementById(idTable);

  let rowH = document.createElement("tr");
  for (let key in data[0]) {
    let th = document.createElement("th");
    th.innerHTML = key;
    rowH.appendChild(th);
    console.log(rowH);
  }
  table.appendChild(rowH);

  data.forEach(item => {
    let rowD = document.createElement("tr");
    for (let key in item) {
      let td = document.createElement("td");
      td.innerHTML = item[key];
      rowD.appendChild(td);
      console.log(rowD);
    }
    table.appendChild(rowD);
  });
};

let correspond = {
	"Номер ИМО судна" : "IMO",
	"Модель судна" : "Model",
	"Тип судна" : "Type",
	"Дата прибытия" : "DataArrival",
	"Дата отбытия" : "DateDeparture",
	"Вместимость(в тоннах для грузовых и в людях для пассажирских)" : [ "CapacityFrom", "CapacityTo"], 
	"Нагруженность" :["LoadFrom", "LoadTo"]
}

let dataFilter = (dataForm) => {
  let dictFilter = {};

  // Перебираем все элементы формы с фильтрами
  for (let j = 0; j < dataForm.elements.length; j++) {
    let item = dataForm.elements[j];
    let valInput = item.value;

    if (item.type == "text") {
      valInput = valInput.toLowerCase();
    } 
    else
    if (item.type == "number") {
      if (valInput === "" && item.id.includes("From")) {
        valInput = -Infinity;
      }
      else if (valInput === "" && item.id.includes("To")) {
        valInput = Infinity;
      }
      else {
        valInput = parseFloat(valInput);
      }
    }
	else if (item.type == "date") {

	}

    dictFilter[item.id] = valInput;
    console.log(dictFilter[item.id]);
  }
  
  return dictFilter;
};


let filterTable = (data, idTable, dataForm) => {
	
	console.log('Начинаю фильтрацию');

  let datafilter = dataFilter(dataForm);

  let tableFilter = data.filter(item => {
    let result = true;

    for (let key in item) {
      let val = item[key];
		
	    if (key === "Номер ИМО судна" || key === "Модель судна")
	   {
	    	val = item[key].toLowerCase()
        result &&= val.indexOf(datafilter[correspond[key]]) !== -1;
    	}

	    else if (typeof val == "number") {  
		
        if(key === "Вместимость(в тоннах для грузовых и в людях для пассажирских)") {
          let fromValue = datafilter[`CapacityFrom`];
          let toValue = datafilter[`CapacityTo`];
          result &&= val >= fromValue && val <= toValue;
        }

        if (key === "Нагруженность") {
          let fromValue = datafilter[`LoadFrom`];
          let toValue = datafilter[`LoadTo`];
          result &&= val >= fromValue && val <= toValue;
        }
     } 

	     if (key === "Дата прибытия")
	      {
          result &&= (DateChangeForm(val) == datafilter[`DataArrival`]) || (datafilter[`DataArrival`] == '');
		    	console.log(result, DateChangeForm(val), key, datafilter[`DataArrival`]);
        }

      if (key ==="Дата отбытия") {
        result &&= (DateChangeForm(val) == datafilter[`DateDeparture`]) || (datafilter[`DateDeparture`] == '');
        console.log(result, DateChangeForm(val), key, datafilter[`DateDeparture`]);
      }

     
	  }
    
    return result;
  });
  
    clearTable(idTable);
    createTable(tableFilter, idTable);
  	console.log('Фильтрация окончена');
}

  function clearFilter(){
  let filterForm = document.getElementById('filterForm');
  let filterInputs = filterForm.getElementsByTagName('input');
  for (let i = 0; i < filterInputs.length; i++) {
    if (filterInputs[i].type === 'text' || filterInputs[i].type === 'number') {
      filterInputs[i].value = '';
    }
  }
  clearTable('list');
  createTable(portData,'list')
}

document.addEventListener("DOMContentLoaded", function() {
 createTable(portData, 'list');
})
